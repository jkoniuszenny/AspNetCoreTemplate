<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true">
  <!--internalLogFile="C:\PepRcp_CentralaLogs\NLog.log" internalLogLevel="Debug" throwExceptions="true"> -->
  <!--Uncoment above line to switch on NLog internal logging-->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
  </extensions>
  <targets async="true">
    <target xsi:type="Database"
          name="DatabaseTarget"
          keepConnection="true"
          commandType="Text"
          dbDatabase="databaseName"
          dbUserName="databaseUser"
          dbPassword="databasePassword"
          dbHost="databaseHost"
          commandText="INSERT INTO [Log].[Log] (Logged,Level,LogMessage,Exception,StackTrace,Path,Json,Ip) VALUES (@Logged, @Level, @Message, @Exception, @StackTrace,@Path,@Json,@Ip)">
      <install-command>
        <text>
          IF (NOT EXISTS (SELECT * FROM sys.schemas WHERE name = 'Log'))
          BEGIN
          EXEC ('CREATE SCHEMA [Log]')
          END

          IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Log].[Log]') AND type in (N'U'))
          CREATE TABLE [Log].[Log]
          (
          Id bigint primary key not null identity(1,1),
          Logged datetime2,
          Level nvarchar(10),
          LogMessage nvarchar(max),
          Exception [nvarchar](max) NULL,
          StackTrace [nvarchar](max) NULL,
          Path [nvarchar](max) NULL,
          Json  [nvarchar](max) NULL,
          Ip [varchar](40) NULL
          )
        </text>
        <ignoreFailures>false</ignoreFailures>
      </install-command>
      <uninstall-command>
        <text>
          IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[Log].[Log]') AND type in (N'U'))
          DROP TABLE [Log].[Log]

          DROP SCHEMA IF EXISTS [Log]
        </text>
      </uninstall-command>
      <parameter name="@Logged" layout="${date}" />
      <parameter name="@Level" layout="${level}" />
      <parameter name="@Message" layout="${message}" />
      <parameter name="@Exception" layout=" ${exception:format=type,message,method:maxInnerExceptionLevel=10:innerFormat=shortType,message,method:innerExceptionSeparator=\n}" />
      <parameter name="@StackTrace" layout="${exception:format=StackTrace}" />
      <parameter name="@Json" layout="${aspnet-request-posted-body}" />
      <parameter name="@Path" layout="${aspnet-request-url} ${aspnet-request-querystring}" />
      <parameter name="@Ip" layout="${machinename} - Dictionaries" />
    </target>
  </targets>

  <rules>
    <logger name="*" levels="Error, Warn, Trace "  writeTo="DatabaseTarget" />
  </rules>
</nlog>